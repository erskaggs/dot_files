(function() {
  var ClipboardItems, systemClipboard;

  systemClipboard = require('clipboard');

  ClipboardItems = require('../lib/clipboard-items');

  describe("ClipboardItems", function() {
    var clipboardItems, limit, _ref;
    _ref = [], clipboardItems = _ref[0], limit = _ref[1];
    beforeEach(function() {
      limit = 3;
      atom.config.set('clipboard-plus.limit', limit);
      atom.config.set('clipboard-plus.unique', false);
      atom.config.set('clipboard-plus.minimumTextLength', 1);
      atom.config.set('clipboard-plus.maximumTextLength', 1000);
      return clipboardItems = new ClipboardItems;
    });
    afterEach(function() {
      return clipboardItems.destroy();
    });
    describe('write', function() {
      it("atom clipboard", function() {
        expect(clipboardItems.size()).toBe(0);
        atom.clipboard.write('next');
        return expect(clipboardItems.size()).toBe(1);
      });
      return it("system clipboard", function() {
        expect(clipboardItems.size()).toBe(0);
        atom.clipboard.write('abc');
        systemClipboard.writeText('123');
        expect(clipboardItems.size()).toBe(1);
        expect(clipboardItems.get(0).text).toBe('abc');
        clipboardItems.syncSystemClipboard();
        expect(clipboardItems.size()).toBe(2);
        return expect(clipboardItems.get(1).text).toBe('123');
      });
    });
    it("limit", function() {
      expect(clipboardItems.size()).toBe(0);
      atom.clipboard.write('1');
      atom.clipboard.write('2');
      atom.clipboard.write('3');
      atom.clipboard.write('4');
      return expect(clipboardItems.size()).toBe(limit);
    });
    it("with metadata", function() {
      var metadata, text, _ref1;
      expect(clipboardItems.size()).toBe(0);
      atom.clipboard.write('1', {
        fullLine: false
      });
      atom.clipboard.write('2', {
        fullLine: false
      });
      expect(clipboardItems.size()).toBe(2);
      _ref1 = clipboardItems.get(1), text = _ref1.text, metadata = _ref1.metadata;
      expect(text).toBe('2');
      return expect(metadata.fullLine).toBe(false);
    });
    it("with metadata replace", function() {
      var metadata, text, _ref1;
      expect(clipboardItems.size()).toBe(0);
      atom.clipboard.write('1', {
        fullLine: false
      });
      atom.clipboard.write('2', {
        fullLine: false
      });
      atom.clipboard.write('3', {
        fullLine: false,
        replace: true
      });
      expect(clipboardItems.size()).toBe(2);
      _ref1 = clipboardItems.get(1), text = _ref1.text, metadata = _ref1.metadata;
      expect(text).toBe('3');
      expect(metadata.fullLine).toBe(false);
      return expect(metadata.replace).not.toBeExists;
    });
    it("destroy", function() {
      clipboardItems.destroy();
      expect(clipboardItems.size()).toBe(0);
      atom.clipboard.write('1', {
        fullLine: false
      });
      atom.clipboard.write('2', {
        fullLine: false
      });
      return expect(clipboardItems.size()).toBe(0);
    });
    it("unique", function() {
      atom.clipboard.write('1', {
        fullLine: false
      });
      atom.clipboard.write('1', {
        fullLine: false
      });
      expect(clipboardItems.size()).toBe(2);
      clipboardItems.clear();
      atom.config.set('clipboard-plus.unique', true);
      atom.clipboard.write('1', {
        fullLine: false
      });
      atom.clipboard.write('1', {
        fullLine: false
      });
      return expect(clipboardItems.size()).toBe(1);
    });
    it("delete", function() {
      var item1, item2;
      atom.clipboard.write('1', {
        fullLine: false
      });
      atom.clipboard.write('2', {
        fullLine: false
      });
      atom.clipboard.write('3', {
        fullLine: false
      });
      expect(clipboardItems.size()).toBe(3);
      clipboardItems["delete"](clipboardItems.get(1));
      expect(clipboardItems.size()).toBe(2);
      item1 = clipboardItems.get(0);
      expect(item1.text).toBe('1');
      item2 = clipboardItems.get(1);
      return expect(item2.text).toBe('3');
    });
    return describe('isIgnoreText', function() {
      it('ignore blank', function() {
        var item;
        atom.clipboard.write('1', {
          fullLine: false
        });
        atom.clipboard.write(" \n\n ", {
          fullLine: true
        });
        atom.clipboard.write("   \t ", {
          fullLine: true
        });
        expect(clipboardItems.size()).toBe(1);
        item = clipboardItems.get(0);
        return expect(item.text).toBe('1');
      });
      it('minimumTextLength', function() {
        expect(clipboardItems.size()).toBe(0);
        atom.clipboard.write('1', {
          fullLine: false
        });
        expect(clipboardItems.size()).toBe(1);
        atom.config.set('clipboard-plus.minimumTextLength', 3);
        atom.clipboard.write('ab', {
          fullLine: false
        });
        expect(clipboardItems.size()).toBe(1);
        atom.clipboard.write('abc', {
          fullLine: false
        });
        expect(clipboardItems.size()).toBe(2);
        atom.clipboard.write('   ab  ', {
          fullLine: false
        });
        return expect(clipboardItems.size()).toBe(2);
      });
      return it('maximumTextLength', function() {
        expect(clipboardItems.size()).toBe(0);
        atom.clipboard.write('abcdeabcde1', {
          fullLine: false
        });
        expect(clipboardItems.size()).toBe(1);
        atom.config.set('clipboard-plus.maximumTextLength', 10);
        atom.clipboard.write('abcdeabcde1', {
          fullLine: false
        });
        expect(clipboardItems.size()).toBe(1);
        atom.clipboard.write('abcdeabcde', {
          fullLine: false
        });
        return expect(clipboardItems.size()).toBe(2);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/Users/erskaggs/.atom/packages/clipboard-plus/spec/clipboard-items-spec.coffee
